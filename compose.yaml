services:
  producer:
    build:
      dockerfile: producer.Dockerfile
    ports:
      - "9001:9001"
    networks:
      - personal
    depends_on:
      - kafka-ui
      - mongodb
      - redis
    env_file:
      - .env
    environment:
      SPRING_DATA_MONGODB_DATABASE: ${CUSTOMER_DB}
    volumes:
      - producer-data:/var/lib/producer/data

  consumer:
    build:
      dockerfile: consumer.Dockerfile
    ports:
      - "9002:9002"
    networks:
      - personal
    depends_on:
      - producer
    env_file:
      - .env
    environment:
      SPRING_DATA_MONGODB_DATABASE: ${EVENT_DB}
    volumes:
      - consumer-data:/var/lib/consumer/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - personal
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    restart: always
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS_1}
    networks:
      - personal
    volumes:
      - kafka1-data:/var/lib/kafka1/data

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    container_name: kafka2
    restart: always
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS_2}
    networks:
      - personal
    volumes:
      - kafka2-data:/var/lib/kafka2/data

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    restart: always
    depends_on:
      - kafka1
      - kafka2
      - zookeeper
    ports:
      - "8081:8081"
    env_file:
      - .env
    networks:
      - personal
    volumes:
      - schema-registry-data:/var/lib/schema-registry/data

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8082:8080"
    depends_on:
      - kafka1
      - kafka2
      - zookeeper
      - schema-registry
    env_file:
      - .env
    networks:
      - personal
  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/var/lib/mongodb/data
    networks:
      - personal

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - personal
    volumes:
      - redis-data:/var/lib/redis/data

networks:
  personal:
    driver: bridge
volumes:
  zookeeper-data:
  kafka1-data:
  kafka2-data:
  schema-registry-data:
  mongo-data:
  redis-data:
  producer-data:
  consumer-data:
