spring:
  application:
    name: core
  jpa:
    open-in-view: false
  kafka:
    bootstrap-servers: http://localhost:19092,http://localhost:29092
    consumer:
      group-id: customerConsumer
      auto-offset-reset: earliest
      keyDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer:
            key:
              delegate:
                class: org.apache.kafka.common.serialization.StringDeserializer
            value:
              delegate:
                class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        schema:
          registry:
            url: http://localhost:8081
        specific:
          avro:
            reader: true
      enable-auto-commit: false
    producer:
      keySerializer: org.apache.kafka.common.serialization.StringSerializer
      valueSerializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      retries: 1
      acks: all
      properties:
        schema:
          registry:
            url: http://localhost:8081
    listener:
      ack-mode: MANUAL_IMMEDIATE
kafka:
  topics:
    create-customer-event:
      name: CreateCustomerEventTopic
      partitions: 1
      replicationFactor: 2
    customer-view-event:
      name: CustomerViewEventTopic
      partitions: 1
      replicationFactor: 2
    update-customer-name-event:
      name: UpdateCustomerNameEventTopic
      partitions: 1
      replicationFactor: 2
    update-customer-address-event:
      name: UpdateCustomerAddressEventTopic
      partitions: 1
      replicationFactor: 2
    delete-customer-event:
      name: DeleteCustomerEventTopic
      partitions: 1
      replicationFactor: 2
